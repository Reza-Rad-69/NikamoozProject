// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using taskSession2.InfraStructures.Data.EF.SqlServer.Common;

#nullable disable

namespace taskSession2.InfraStructures.Data.EF.SqlServer.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20250708053939_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("taskSession2.taskSession2.Core.Domain.StatusDescription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("StatusDescription");
                });

            modelBuilder.Entity("taskSession2.taskSession2.Core.Domain.StatusTask", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("statusDate")
                        .HasMaxLength(8)
                        .HasColumnType("int");

                    b.Property<int>("statusDescriptionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TaskId");

                    b.HasIndex("statusDescriptionId");

                    b.ToTable("StatusTask");
                });

            modelBuilder.Entity("taskSession2.taskSession2.Core.Domain.Tasks.Task", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("taskSession2.taskSession2.Core.Domain.StatusTask", b =>
                {
                    b.HasOne("taskSession2.taskSession2.Core.Domain.Tasks.Task", "task")
                        .WithMany("statusTask")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("taskSession2.taskSession2.Core.Domain.StatusDescription", "statusDescription")
                        .WithMany()
                        .HasForeignKey("statusDescriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("statusDescription");

                    b.Navigation("task");
                });

            modelBuilder.Entity("taskSession2.taskSession2.Core.Domain.Tasks.Task", b =>
                {
                    b.Navigation("statusTask");
                });
#pragma warning restore 612, 618
        }
    }
}
